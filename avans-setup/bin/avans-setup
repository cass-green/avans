#!/usr/bin/env ruby

require 'fileutils'
require 'erb'

AVANS_VERSION='0.27.4'

class String
  def squish
    self.gsub(/^ {6}/, '')
  end
end

class AvansSetup
  def initialize(pkg)
    @pkg = pkg
    if pkg =~ /\A(.*)\.(.*?)\z/
      @groupId = $1
      @artifactId = $2
      @project = $2
    else
      raise "Invalid package name: #{pkg}"
    end
  end

  def render(path)
    fullpath = File.join(File.dirname(File.expand_path(__FILE__)), "../templates/#{path}")
    erb = ERB.new(File.read(fullpath))
    result = erb.result(binding)
    return result
  end

  def run()
    if File.directory?(@project)
      raise "Directory is already exists: #{@project}/"
    end

    javaDir = "#{@project}/src/main/java/#{@pkg.gsub(/\./, '/')}"

    FileUtils.mkdir_p(javaDir)
    FileUtils.mkdir_p("#{javaDir}/controller/")
    FileUtils.mkdir_p("#{@project}/src/main/resources/")
    FileUtils.mkdir_p("#{@project}/templates/")

    File.write("#{javaDir}/Main.java",
      self.render('Main.java'))
    File.write("#{javaDir}/controller/RootController.java",
      self.render('controller/RootController.java'))
    File.write("#{@project}/templates/index.mustache",
      self.render('templates/index.mustache'))
    File.write("#{@project}/pom.xml",
      self.render('pom.xml'))
    File.write("#{@project}/README.md",
      self.render('README.md'))

    Dir.chdir(@project)
    system('mvn package')

    puts File.read('README.md')
  end
end

if ARGV.length != 1
  puts "Usage: avans-setup.rb package.name"
  exit
end

packageName = ARGV[0]

setup = AvansSetup.new(packageName)
setup.run()

